name: Python CI/CD Pipeline

on:
  push:
    branches:
      - main  # 在推送到 main 分支时触发
  pull_request:
    branches:
      - main  # 在针对 main 分支的 PR 时触发
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 环境

    steps:
    # Step 1: 检出代码
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: 设置 Python 环境
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: 3.10  # 指定 Python 版本

    # Step 3: 安装依赖
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: 运行测试
    - name: Run unit tests
      run: |
        python -m unittest discover  # 扫描并运行所有单元测试

    # Step 5: 构建（可选步骤，根据需求调整）
    - name: Build application
      run: |
        echo "Building the application..."
        # 在这里添加你的构建命令

    # Step 6: 生成报告（如果有）
    - name: Upload test report
      if: success()  # 如果前面的步骤成功
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: reports/  # 替换为实际的报告路径

    # Step 7: 部署（可选步骤，根据需求调整）
    - name: Deploy application
      if: success()  # 仅在所有步骤成功时部署
      run: |
        echo "Deploying the application..."
        # 在这里添加你的部署命令
